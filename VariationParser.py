#!/usr/bin/env python

#
# Parses the list generated by UniProtXMLParser.py and maps strains and mutants.
# Kristian Jensen, Januar 2015
#

import re
import fileinput

def printTab(*arg):
    print "\t".join((str(_) for _ in arg))

def parseStrains(desc):
    desc = desc.split(";")[0]
    desc = desc.strip(".")
    desc = re.sub("ASBM2/3","ASMB2, ASMB3", desc)
    desc = re.sub(" and ",", ", desc)
    desc = re.sub(r" / ","/", desc)
    desc = re.sub("mutants$",'',desc)
    desc = re.sub(" or ",", ",desc)
    if "," in desc and re.search(r"(resistant|sensitive)",desc.split(",")[-1]):
        desc = ",".join(desc.split(",")[:-1])
    
    if re.match(r"In [\w\-/]+$",desc): # "In <strain>"
        strains = [ desc.split(" ")[1] ]
    elif re.match(r"In ([\w\-/]+( / |, ))+[\w\-/]+",desc): # "In <strains separated by , or / >"
        strain_string = re.sub("^In ",'',desc)
        strains = re.split(r" / |, ",strain_string)
    elif re.match(r"In [\w\-/]+ mutant$",desc): # "In <strain> mutant"
        strain = re.match(r"In ([\w\-/]+) mutant",desc).group(1)
        if strain == "inactive":
            return []
        else:
            strains = [ strain ]
    elif re.match(r"In mutants .+(, | / ).+",desc): # "In mutants <strains separated by , or / >"
        strain_string = re.sub("^In mutants ",'',desc)
        strains = re.split(r" / |, ",strain_string)
    elif re.match(r"In .*(strain|plasmid|mutant|transposon|allele) [\w\-]+$", desc): # "In mutant/strain/... <strain>"
        strains = [ desc.split(" ")[-1] ]
    elif re.match(r"In [^:]+: ", desc): # "In <something>: <strain(s)>"
        strain_string = re.sub("^In [^:]+: ",'', desc)
        strains = re.split(r" / |, ",strain_string)
    else:
        return []
    return strains


for line in fileinput.input():
    fields = line.strip("\n").split("\t")
    prot_name = fields[0]
    start_pos = fields[1]
    end_pos = fields[2]
    desc = fields[3]
    original_aa = fields[4]
    variant_aa = fields[5]
    strains = parseStrains(desc)
    for strain in strains:
        printTab(prot_name,start_pos,end_pos,strain,original_aa,variant_aa)